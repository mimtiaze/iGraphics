#include"iGraphics.h"
#include<time.h>
#include<stdlib.h>

int car_x=200,car_y=102,plane_x=500,bird_x=700;
bool jump=false,jump_up=false;
int bar_y[5]={102,150,120,150,126},bar_x[5]={700,920,1140,1360,1580},car_land=102,jump_start;
int timer=700,land_timer=500-65,land_i=-1,bar_y_i=0;
int life=5;
double score=0;
int show_coin[20]={1,1,1,1};

void play();
void road();
void crush();
void land();
void car_move();
void stick_bar();
void coin_show();
int numb();

void coin_show(){
	int i,j;

	/*for(i=0;i<5;i++)
		for(j=0;j<160;j+=40)
			iShowBMP(bar_x[i]+j,bar_y[i]+40,"pic\\coin10.bmp");*/


	if(show_coin[0]==1)
		iShowBMP(bar_x[0],bar_y[0]+35,"pic\\coin10.bmp");
	if(show_coin[1]==1)
		iShowBMP(bar_x[0]+40,bar_y[0]+35,"pic\\coin10.bmp");
	if(show_coin[2]==1)
		iShowBMP(bar_x[0]+80,bar_y[0]+35,"pic\\coin10.bmp");
	if(show_coin[3]==1)
		iShowBMP(bar_x[0]+120,bar_y[0]+35,"pic\\coin10.bmp");

	iShowBMP(bar_x[1],bar_y[1]+35,"pic\\coin10.bmp");
	iShowBMP(bar_x[1]+40,bar_y[1]+35,"pic\\coin10.bmp");
	iShowBMP(bar_x[1]+80,bar_y[1]+35,"pic\\coin10.bmp");
	iShowBMP(bar_x[1]+120,bar_y[1]+35,"pic\\coin10.bmp");

	iShowBMP(bar_x[2],bar_y[2]+35,"pic\\coin10.bmp");
	iShowBMP(bar_x[2]+40,bar_y[2]+35,"pic\\coin10.bmp");
	iShowBMP(bar_x[2]+80,bar_y[2]+35,"pic\\coin10.bmp");
	iShowBMP(bar_x[2]+120,bar_y[2]+35,"pic\\coin10.bmp");

	iShowBMP(bar_x[3],bar_y[3]+35,"pic\\coin10.bmp");
	iShowBMP(bar_x[3]+40,bar_y[3]+35,"pic\\coin10.bmp");
	iShowBMP(bar_x[3]+80,bar_y[3]+35,"pic\\coin10.bmp");
	iShowBMP(bar_x[3]+120,bar_y[3]+35,"pic\\coin10.bmp");

	iShowBMP(bar_x[4],bar_y[4]+35,"pic\\coin10.bmp");
	iShowBMP(bar_x[4]+40,bar_y[4]+35,"pic\\coin10.bmp");
	iShowBMP(bar_x[4]+80,bar_y[4]+35,"pic\\coin10.bmp");
	iShowBMP(bar_x[4]+120,bar_y[4]+35,"pic\\coin10.bmp");


}

void iDraw()
{
	// drawing road

	int i;
	iClear();

	iShowBMP(0,0,"pic\\track.bmp");
	iShowBMP(plane_x,400,"pic\\plane.bmp");
	iShowBMP(bird_x,350,"pic\\bird.bmp");

	//********************** Bar **********************************

	iShowBMP(bar_x[0],bar_y[0],"pic\\bar.bmp");
	iShowBMP(bar_x[1],bar_y[1],"pic\\bar.bmp");
	iShowBMP(bar_x[2],bar_y[2],"pic\\bar.bmp");
	iShowBMP(bar_x[3],bar_y[3],"pic\\bar.bmp");
	iShowBMP(bar_x[4],bar_y[4],"pic\\bar.bmp");

	coin_show();
	
	iShowBMP(car_x,car_y,"pic\\car new.bmp");
	//iShowBMP(400,400,"pic\\plane.bmp");
}

/* 
	function iMouseMove() is called when the user presses and drags the mouse.
	(mx, my) is the position where the mouse pointer is.
*/
void iMouseMove(int mx, int my)
{
	//place your codes here
}

/* 
	function iMouse() is called when the user presses/releases the mouse.
	(mx, my) is the position where the mouse pointer is.
*/
void iMouse(int button, int state, int mx, int my)
{
	if(button == GLUT_LEFT_BUTTON && state == GLUT_DOWN)
	{
		//place your codes here	
	}
	if(button == GLUT_RIGHT_BUTTON && state == GLUT_DOWN)
	{
		//place your codes here	
	}
}

/*
	function iKeyboard() is called whenever the user hits a key in keyboard.
	key- holds the ASCII value of the key pressed. 
*/
void iKeyboard(unsigned char key)
{
	if(key == 'p')
	{
		iPauseTimer(0);
	}
	if(key=='r'){
		iResumeTimer(0);
	}
	//place your codes for other keys here
}

/*
	function iSpecialKeyboard() is called whenver user hits special keys like-
	function keys, home, end, pg up, pg down, arraows etc. you have to use 
	appropriate constants to detect them. A list is:
	GLUT_KEY_F1, GLUT_KEY_F2, GLUT_KEY_F3, GLUT_KEY_F4, GLUT_KEY_F5, GLUT_KEY_F6, 
	GLUT_KEY_F7, GLUT_KEY_F8, GLUT_KEY_F9, GLUT_KEY_F10, GLUT_KEY_F11, GLUT_KEY_F12, 
	GLUT_KEY_LEFT, GLUT_KEY_UP, GLUT_KEY_RIGHT, GLUT_KEY_DOWN, GLUT_KEY_PAGE UP, 
	GLUT_KEY_PAGE DOWN, GLUT_KEY_HOME, GLUT_KEY_END, GLUT_KEY_INSERT 
*/
void iSpecialKeyboard(unsigned char key)
{
	if(key == GLUT_KEY_UP){
		jump=true;
		jump_up=true;
		jump_start=car_y;
	}
	if(key == GLUT_KEY_END)
	{
		exit(0);	
	}
}
/*##############################################################################
							track fixing
################################################################################*/
void road(){
	int i;

	for(i=0;i<5;i++)
		if(bar_x[i]<10) 
			bar_x[i]=1100;
	for(i=0;i<5;i++)
		bar_x[i]-=5;

	plane_x-=5;
	if(plane_x<0)	plane_x=800;

	bird_x-=5;
	if(bird_x<0)	bird_x=800;

	timer-=5;
	if(timer==0){
		stick_bar();
		timer=220;
	}
}


/*####################################################################
							Generating bar's Y axis
######################################################################*/

int numb(){
	int z;

	z=rand()%150+102;
	if(z%2==0)						// only even number generate, if it is not doing, the program gives a bug of not landing on every bar's surface
		return z;
	else
		numb();
}
/*######################################################################
								Generating bar
########################################################################*/
void stick_bar(){
	int y,i;

	
	y=numb();						// Randomly choose a coordinate
	bar_y[bar_y_i]=y;
	bar_y_i++;
	if(bar_y_i>=5)
		bar_y_i=0;


}
/*################################################################################
							Check if the car crush with a bar
##################################################################################*/
void crush(){
	int i;
	for(i=0;i<5;i++)
		if((bar_x[i]==car_x+65) && ((car_y>=bar_y[i] && car_y<=bar_y[i]+15) || (bar_y[i]>=car_y && bar_y[i]<=car_y+32)))
		{
			life--;
		}
}

/*################################################################################
	determine where the car would land, if there is a bar or in the surface
##################################################################################*/

void land(){
	/*for(int i=0;i<5;i++){
		if((car_x+65>=bar_x[i]) && (car_x<bar_x[i]+160))
			car_land=bar_y[i]+16;
		else
			car_land=102;
	}*/
	/*for(int i=0;i<5;i++){
		if(car_x+65<=bar_x[i])
			car_land=bar_y[i]+16;
		else
			car_land=102;
	
	}*/

	if((car_y>bar_y[land_i]))
		car_land=bar_y[land_i]+16;				// Bar's hight 16 pixel, so the car should land on the surface if the bar
	else
		car_land=102;							// 102 = surface axis (Y-axis)

	land_timer-=5;
	if(land_timer==0){	land_timer=220;	land_i++;}
	
	if(land_i==5)	land_i=0;					// reset land_i

}

/*###################################################
					for moving the car
#####################################################*/

void car_move(){
	/*if(bar_x<0)		bar_x=795;
		bar_x-=5;*/

	if(jump==true){
		if(jump_up==true){
			if(car_y>=jump_start+50){
				jump_up=false;
			}
			car_y+=4;								// Jumping pixel
		}
		else if(car_y>car_land)
			car_y-=4;
	}
	score++;

	if(car_x+65==bar_x[0])
		show_coin[0]=0;



}
/*##############################################################
						Lets play !!
################################################################*/
void play(){
	//**************** for moving the track *************************

	if(life>0){
		road();
		//crush();
		land();
		car_move();
	}
	else
		exit(0);

	//*************************************************** Debug ******************************************************

	//printf("car x=%d\tcar y=%d\tbar x=%d\tbar y=%d,%d\n",car_x,car_y,bar_x[0],bar_y[0],bar_y[1]);
	//printf("bar y=%d,%d,%d,%d,%d\ttimer=%d\n",bar_y[0],bar_y[1],bar_y[2],bar_y[3],bar_y[4],timer);
	//printf("bar x=%4d,%4d,%4d,%4d,%4d\t  bar y=%3d,%3d,%3d,%3d,%3d\tcar y=%3d\n",bar_x[0],bar_x[1],bar_x[2],bar_x[3],bar_x[4],bar_y[0],bar_y[1],bar_y[2],bar_y[3],bar_y[4],car_y);
	//printf("bar y=%3d,%3d,%3d,%3d,%3d\tcar y=%3d\tland time=%3d\tland i=%d\n",bar_y[0],bar_y[1],bar_y[2],bar_y[3],bar_y[4],car_y,land_timer,land_i);
	//printf("life=%d\tscore=%.0lf\t%d, %d, %d, %d\n",life,score,show_coin[0],show_coin[1],show_coin[2],show_coin[3]);	
	printf("bar x[0]=%4d\tbar y[0]=%3d\tcar x=%3d\tcar y=%3d\t%d\n",bar_x[0],bar_y[0],car_x+65,car_y,show_coin[0]);
	
}

/*###############################################
				main function
#################################################*/

int main()
{
	iSetTimer(50,play);
	iInitialize(795, 500, "Jumping Car");
	return 0;
}
